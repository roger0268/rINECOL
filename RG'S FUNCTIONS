# lineplots with error bars -- with backconversion ----

lineplot.error <- function(MEDIAS, ERROR, link=NA,legend.text=FALSE, ylab="Medida (unidades)", xlab="Factor", pch=19,col= "grey", cex.axis = 1, cex.lab = 1, cex = 1, cex.main = 2, las = 1, lwd=1, lwd.x=1, axis.lty=0, main="", names.arg = colnames(MEDIAS), density = NULL, angle = 45, xpd = FALSE, ylim = FALSE, axes = TRUE, add = FALSE, backtrans=backtrans) {
 
  if(is.na(link)) backtrans <- function(X){X*1} else {
    if(link=="identity") backtrans <- function(X){X*1}
    if(link=="log") backtrans <- function(X){exp(X)}
    if(link=="sqrt") backtrans <- function(X){X^2}
    if(link=="inverse") backtrans <- function(X){1/X}
    if(link=="logit") backtrans <- function(X){boot::inv.logit(X)}
  }
    
  if(is.numeric(MEDIAS)){
    MEDIAS <- t(MEDIAS)
    ERROR <- t(ERROR)
  }
  if(length(col)< ncol(MEDIAS))  col <- rep(col, ncol(MEDIAS))
  if(length(pch)< ncol(MEDIAS))  pch<- rep(pch, ncol(MEDIAS))
  
  FILAS <- seq(2, 2*dim(MEDIAS)[1], 2)
  COLUMNAS <- seq(0, (2*dim(MEDIAS)[1]+1) * (dim(MEDIAS)[2] -1), 2*dim(MEDIAS)[1]+1)
  
  if(length(ylim)== 1) ylim <- backtrans(c(min(MEDIAS - ERROR), max(MEDIAS + ERROR)))
  
  barplot(backtrans(MEDIAS)*0, beside=TRUE, width = 2, c(0,0.5), ylab = ylab, xlab = xlab, ylim = ylim, col=col, cex.axis=cex.axis, cex.lab=cex.lab, cex=cex, las = las, lwd = lwd, legend.text = legend.text, axis.lty = axis.lty, main = main, names.arg =names.arg, angle = angle, density = density, xpd = xpd, cex.main = cex.main, axes = axes, add = add)
  
  for(j in 1 : dim(MEDIAS)[2]){
    for(i in 1 : dim(MEDIAS)[1]){
      lines(c(FILAS[i] + COLUMNAS[j], FILAS[i] + COLUMNAS[j]), backtrans(c(MEDIAS[i, j] + ERROR[i, j], MEDIAS[i, j] - ERROR[i, j])), lwd=lwd.x, col=col[i])
      points(FILAS[i] + COLUMNAS[j], backtrans(MEDIAS[i, j]), col=col[i], pch=pch[j])
      lines(c(FILAS[i] + COLUMNAS[j] - 0.2, FILAS[i] + COLUMNAS[j] + 0.2), backtrans(c(MEDIAS[i, j] + ERROR[i, j], MEDIAS[i, j] + ERROR[i, j])), lwd=lwd.x, col=col[i])
      lines(c(FILAS[i] + COLUMNAS[j] - 0.2, FILAS[i] + COLUMNAS[j] + 0.2), backtrans(c(MEDIAS[i, j] - ERROR[i, j], MEDIAS[i, j] - ERROR[i, j])), lwd=lwd.x, col=col[i])
    }
  }
}